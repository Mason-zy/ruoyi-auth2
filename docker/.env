# Docker Compose 项目名称
COMPOSE_PROJECT_NAME=ruoyi-sso

# Docker 镜像仓库地址
DOCKER_REGISTRY=192.168.100.10:5050

# 后端镜像标签
BACKEND_IMAGE_TAG=v2.1
# 前端镜像标签
FRONTEND_IMAGE_TAG=v2.1

# --- MySQL 配置 (确保这些凭证与您现有的 safty-mysql 服务中的配置匹配) --- #
MYSQL_DATABASE=ruoyi-sso # 您希望连接的数据库名
MYSQL_USER=root         # 连接数据库的用户名
MYSQL_PASSWORD=123456 # 对应用户的密码

# --- Redis 配置 --- #
# 如果您现有的 safty-redis 服务设置了密码，请在此处填写
# SPRING_REDIS_PASSWORD=your_existing_redis_password

# --- 服务端口映射 (这些是 ruoyi-sso 新服务的端口) --- #
FRONTEND_PORT=3011
BACKEND_PORT=3012
# 下面这两个端口变量指向现有服务在宿主机上暴露的端口，是正确的
MYSQL_PORT=3003 # safty-mysql 映射到宿主机的端口
REDIS_PORT=3004 # safty-redis 映射到宿主机的端口

# --- Spring Boot 配置 (由 docker-compose.yml 注入到后端容器) --- #
SPRING_PROFILES_ACTIVE=prod

# MySQL 数据源配置
# 主机名使用 Docker 桥接网络的网关 IP (通常是 172.17.0.1) 或您的宿主机实际IP
# 端口为 safty-mysql 映射的宿主机端口 (${MYSQL_PORT})
SPRING_DATASOURCE_URL=jdbc:mysql://192.168.100.151:${MYSQL_PORT}/${MYSQL_DATABASE}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=Asia/Shanghai
SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}

# Redis 配置
# 主机名使用 Docker 桥接网络的网关 IP (通常是 172.17.0.1) 或您的宿主机实际IP
# 端口为 safty-redis 映射的宿主机端口 (${REDIS_PORT})
SPRING_REDIS_HOST=192.168.100.151
SPRING_REDIS_PORT=${REDIS_PORT}
# 如果您现有的 Redis 有密码，取消注释并设置 SPRING_REDIS_PASSWORD
# SPRING_REDIS_PASSWORD=your_existing_redis_password