FROM openjdk:8-jdk-slim as builder

# 更换 apt 源为清华大学镜像
RUN sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list && \
    sed -i 's/security.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list

# 安装字体、图形库依赖和 Maven
RUN apt-get update && apt-get install -y --no-install-recommends \
    fontconfig \
    libfreetype6 \
    libfontconfig1 \
    xfonts-base \
    maven \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /build

# 配置Maven镜像
RUN mkdir -p /root/.m2 \
    && echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" \
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \
    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 \
    http://maven.apache.org/xsd/settings-1.0.0.xsd"> \
    <mirrors> \
        <mirror> \
            <id>aliyunmaven</id> \
            <mirrorOf>*</mirrorOf> \
            <name>阿里云公共仓库</name> \
            <url>https://maven.aliyun.com/repository/public</url> \
        </mirror> \
    </mirrors> \
</settings>' > /root/.m2/settings.xml

# 复制整个项目
COPY . .

# 先构建common模块，然后构建整个项目
RUN cd ruoyi-common && mvn install -DskipTests \
    && cd .. && mvn clean package -DskipTests

# 运行阶段
FROM openjdk:8-jre-slim

WORKDIR /app

# 更换 apt 源为清华大学镜像
RUN sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list && \
    sed -i 's/security.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list

# 安装网络工具和字体依赖
RUN apt-get update && apt-get install -y \
    netcat-openbsd \
    fontconfig \
    libfreetype6 \
    libfontconfig1 \
    xfonts-base \
    fonts-dejavu \
    && rm -rf /var/lib/apt/lists/*

# 复制jar包
COPY --from=builder /build/ruoyi-admin/target/ruoyi-admin.jar ./app.jar

# 复制配置文件
COPY application-prod.yml /app/config/

# 创建配置和上传目录
RUN mkdir -p /app/uploadPath /app/logs

# 创建启动脚本
COPY docker-entrypoint.sh /
RUN chmod +x /docker-entrypoint.sh

# 设置时区
ENV TZ=Asia/Shanghai

# 设置Java AWT无头模式 和 文件编码
ENV JAVA_OPTS="-Djava.awt.headless=true -Dfile.encoding=UTF-8"

# 配置 Locale
ENV LANG=C.UTF-8

# 对外暴露端口
EXPOSE 8088

ENTRYPOINT ["/docker-entrypoint.sh"]